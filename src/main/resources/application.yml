spring:
  profiles:
    default: local

jwt:
  secretKey: ${JWT_SECRET_KEY}
  token:
    header: Authorization
    access:
      expiration: 2419200000 # 30? (1000L(ms -> s) * 60L(s -> m) * 30L(m -> h))
    refresh:
      expiration: 1209600000 #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> ??) * 14(2?))

aws:
  accessKeyId: ${AWS_ACCESS_KEY_ID}
  secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
  region: ${AWS_REGION}
  s3:
    bucketName: ${AWS_BUCKET_NAME}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tagsSorter: alpha
    operations-sorter: alpha
    display-request-duration: true
  use-fqn: true

oauth:
  kakao:
    auth-url: https://kapi.kakao.com
  apple:
    auth-url: https://appleid.apple.com
    client_id: ${APPLE_CLIENT_ID} # 애플 서비스 ID (클라이언트 ID)
    team_id: ${APPLE_TEAM_ID}      # 애플 팀 ID
    key_id: ${APPLE_KEY_ID}       # 애플 개발자 계정에서 발급받은 Key ID
    private_key_path: ${APPLE_PRIVATE_KEY_PATH}

server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

---
spring:
  config:
    activate:
      on-profile: "local"

---
spring:
  config:
    activate:
      on-profile: "dev"

---
spring:
  config:
    activate:
      on-profile: "prod"
